import ChatContacts from "@/components/ChatContacts";
import ChatContainer from "@/components/ChatContainer";
import { allUsersRoute, host } from "@/utils/APIRoutes";
import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useRef, useState } from "react";
import { io } from "socket.io-client";

export default function Home() {
  const socket = useRef();
  const router = useRouter();
  const [contacts, setContacts] = useState([]);
  const [currentUser, setCurrentUser] = useState(undefined);
  const [onlineUsers, setOnlineUsers] = useState([]);
  const [currentChat, setCurrentChat] = useState(undefined);
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    const navigationTo = async () => {
      if (!localStorage.getItem("chat-app-user")) {
        router.push("/login");
      } else {
        setCurrentUser(await JSON.parse(localStorage.getItem("chat-app-user")));
        setIsLoaded(true);
      }
    };
    navigationTo();
  }, []);

  useEffect(() => {
    if (currentUser) {
      socket.current = io(host);
      socket.current.emit("add-user", currentUser._id);
    }
    const getCurrentUser = async () => {
      if (currentUser) {
        if (!currentUser.isAvatarImageSet) {
          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);
          setContacts(data.data);
        } else {
          router.push("/setAvatar");
        }
      }
    };
    getCurrentUser();
  }, [currentUser]);

  const handleChatChange = (chat) => {
    setCurrentChat(chat);
  };

  useEffect(() => {
    console.log(socket, "front socket");
    if (socket.current) {
      socket.current.on("online-users", (onlineUsers) => {
        console.log(onlineUsers, "online users");
        setOnlineUsers(onlineUsers.map((item) => item.key));
      });
    }
  }, [socket.current]);

  return (
    <>
      <Head>
        <title>Chat App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container mt-20">
          <h2 className="text-center text-2xl mb-10">
            Hello {currentUser?.name}
          </h2>
          <div className="flex min-h-[600px] border">
            <ChatContacts
              contacts={contacts}
              currentUser={currentUser}
              changeChat={handleChatChange}
              onlineUsers={onlineUsers}
            />

            <ChatContainer
              currentChat={currentChat}
              socket={socket}
              currentUser={currentUser}
              isLoaded={isLoaded}
            />
          </div>
        </div>
      </main>
    </>
  );
}
